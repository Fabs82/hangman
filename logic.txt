Project Hangman
--------------------------

**Game Logic

--- START THE GAME
1. Set the "player lives" to a number
2. Select a random word from the "words-list.txt" file 

--- START THE LOOP (while mistakes < 10)
3. Show the word with the letters hidden
4. Player chooses a letter of the alphabet
5. Check if the letter is in the word
5b. If YES: add the letter to the word and to a list of already_chosen letters (a letter can be chosen onyl once). ELSE mistakes count +1
6. Repeat the loop unless mistakes = 10 or word has been found


**Game Structure

PLAYER CLASS
Initialized with a simple name
It has a method that aks the player to choose a letter from the alphabet. It returns the letter or whatever input was entered

DICTIONARY CLASS
loads the text files,filters out words (<5 and <12).
picks a random word from it

WORD CLASS
initialized with an instance variable @word coming from the pick_word method
It has a method that hides the letters of the word
It has a method that shows the letters of the word guessed correctly (receive feedback from the GAME class)

GAME CLASS
A list of the letters already chosen. A mistakes counter. An alphabet letters list
It has a method that manages the main loop of the game (play_game)
A method that checks if the input from the player is valid (is the input included in alphabet list?)
Calls a method that gives feedback to the WORD class to update it if a letter is included
Adds the letters to the list of already_chosen_letters
A method that checks if the game has ended (word found or player out of guesses)


**To do later when the game works has intended

At the start of any turn, instead of making a guess the player should also have the option to save the game.
When the program first loads, add in an option that allows you to open one of your saved games, and allow player to play on.